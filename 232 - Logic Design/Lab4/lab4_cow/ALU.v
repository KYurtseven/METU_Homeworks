`timescale 1ns / 1ps
module ALU(
input  [31:0] A, 
input  [31:0] B, 
input  [3:0] ALUop, 
output reg [31:0] C, 
output reg [3:0] Cond // Z,N,C,V
    );
/*  DO NOT EDIT THIS FILE
0000: Zero32
0001: A+B 
0010: A-B
0011: unused
0100: A AND B
0101: A OR B
0110: A XOR B
0111: unused
1000: A
1001: B
1010: SHIFTL(A)
1011: SHIFTR(A)
1100: ROTL(A)
1101: ROTR(A)
1110: A+4
1111: NOT(A)
*/
reg _Z,_N,_C,_V;
reg [31:0] tmpC;
reg [32:0] tmp;

localparam ALU_delay= 6; //6 ns

always @(A or B or ALUop)
begin
	case (ALUop)
	4'b0000: tmpC = 0; //nop
	4'b0001: // A+B
	begin
		tmp=A+B;
		tmpC = tmp[31:0]; 
		_C=tmp[32]; 
		if((A[31]==B[31]) & (A[31]!=tmp[31])) _V=1'b1;
		else _V=1'b0;
	end
	4'b0010: // A-B
	begin
		tmpC = A-B;
		_C=(A<B);
		if((A[31]!=B[31]) & (A[31]!=tmpC[31])) _V=1'b1;
		else _V=1'b0;
	end
	4'b0011: tmpC = 0; //nop
	4'b0100: tmpC = A & B; // A AND B 
	4'b0101: tmpC = A | B; // A OR B
	4'b0110: tmpC = A ^ B; //A XOR B
	4'b0111: tmpC = 0; // nop
	4'b1000: tmpC = A; // A
	4'b1001: tmpC = B; //B
	4'b1010: tmpC = {A[30:0],1'b0}; //SHIFTL(A)
	4'b1011: tmpC = {1'b0,A[31:1]}; //SHIFTR(A)
	4'b1100: tmpC = {A[30:0],A[31]}; //ROTL(A)
	4'b1101: tmpC = {A[0],A[31:1]}; //ROTR(A)
	4'b1110: tmpC = A + 3'b100; //A+4
	4'b1111: tmpC = ~A; // NOT A 
	endcase
	
	if (!((ALUop===4'bz) || (ALUop===4'bx))) 
	begin
		_Z =(tmpC ==0)?1'b1:1'b0;
		_N =(tmpC[31]==1'b1)?1'b1:1'b0;
		C <=#ALU_delay  tmpC;
		Cond <=#ALU_delay {_Z,_N,_C,_V};
	end
end
endmodule