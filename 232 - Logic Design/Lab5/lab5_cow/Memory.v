`timescale 1ns / 1ps
module Memory(
input [23:0] Addr,
input Length, //byte:0 vs. word:1
input Rd, 
input Wr, 
input Enable,
output reg Rdy,
input [31:0] DataIn, 
output reg [31:0] DataOut
);


/*  DO NOT EDIT THIS FILE   */


	localparam byte_1 = 1'b0;
	localparam word_1 = 1'b1;
	localparam ByteT = 8;
	localparam MaxMem = 55; 
	
	localparam Tmem= 8; //8 ns
	localparam Td = 0.2; //200 ps
	
	//memory
	reg [7:0] mem[MaxMem:0];
	integer i;
	reg [31:0] tData;
initial
begin
	Rdy=1'b1; 
	//program
	mem[3]  = 8'b01100000; mem[2]  = 8'b00000000; mem[1]  = 8'b00000000; mem[0]  = 8'b00000000;
	mem[7]  = 8'b01000100; mem[6]  = 8'b00100000; mem[5]  = 8'b00000000; mem[4]  = 8'b00110010;
	mem[11] = 8'b10000110; mem[10] = 8'b10000001; mem[9]  = 8'b00000000; mem[8]  = 8'b00000000;
	mem[15] = 8'b10000110; mem[14] = 8'b10100001; mem[13] = 8'b00000000; mem[12] = 8'b00000100;
	mem[19] = 8'b01000100; mem[18] = 8'b01000000; mem[17] = 8'b00000000; mem[16] = 8'b00111111;
	mem[23] = 8'b10001000; mem[22] = 8'b01000001; mem[21] = 8'b00000000; mem[20] = 8'b00000000;
	//data
	mem[51] = 8'b00110011; mem[50] = 8'b00001111; mem[49] = 8'b11110000; mem[48] = 8'b11001100;
	mem[55] = 8'b00110011; mem[54] = 8'b00001111; mem[53] = 8'b11110000; mem[52] = 8'b11001100;	
end
always @(Rd or Wr or Enable) 
begin
	case ({Rd,Wr,Enable})
		3'b011: //Write to Mem
		begin
			if(Rdy==1'b1)
			begin
				Rdy <=#Td 1'b0; Rdy <=#Tmem 1'b1; 
				if(Length==byte_1) 
				begin
					mem[Addr]=DataIn[7:0];
				end
				else if (Length==word_1) 
				begin
					mem[{Addr[23:2],2'b00}]=DataIn[7:0];
					mem[{Addr[23:2],2'b01}]=DataIn[15:8];
					mem[{Addr[23:2],2'b10}]=DataIn[23:16];
					mem[{Addr[23:2],2'b11}]=DataIn[31:24];
				end //else if 
			end //if(Rdy==1'b1
			
		end
		3'b101: //Read from Mem
		begin
			if(Rdy==1'b1)
			begin
				Rdy <=#Td 1'b0 ; Rdy <=#Tmem 1'b1;
				if(Length==byte_1) 
				begin
					tData[7:0]=mem[Addr];
				end
				else if (Length==word_1) 
				begin
					tData[7:0]=mem[{Addr[23:2],2'b00}];
					tData[15:8]=mem[{Addr[23:2],2'b01}];
					tData[23:16]=mem[{Addr[23:2],2'b10}];
					tData[31:24]=mem[{Addr[23:2],2'b11}];
				end
				DataOut <=#Tmem tData;
			end //if(Rdy==1'b1)
		end
		default: 
		begin
		end
	endcase
	
end

endmodule
	
	
