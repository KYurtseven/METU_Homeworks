import math

def checkResult(o1, o2):
    diff = math.fabs(o1 - o2)
    epsilon = 10 ** -10
    return diff < epsilon

# 1 . Examples
trans1=[[0.0, 0.1716, 0.4437, 0.1175, 0.2672, 0.0],
 [0.0, 0.0765, 0.1113, 0.2241, 0.2412, 0.347],
 [0.0, 0.0326, 0.2168, 0.2523, 0.2505, 0.2478],
 [0.0, 0.0582, 0.1785, 0.3624, 0.0379, 0.3631],
 [0.0, 0.3949, 0.1604, 0.1684, 0.1911, 0.0852],
 [0.0, 0.0, 0.0, 0.0, 0.0, 0.0]]
estimate1=[[0.0, 0.0, 0.0, 0.0],
 [0.2262, 0.3015, 0.188, 0.2843],
 [0.3358, 0.3976, 0.0218, 0.2447],
 [0.1455, 0.1888, 0.3105, 0.3551],
 [0.1114, 0.1357, 0.4219, 0.3309],
 [0.0, 0.0, 0.0, 0.0]]
forward_examples1=[(trans1, estimate1, [1, 1, 3, 3, 0, 2, 1, 2], 5.728066326826846e-07),
 (trans1, estimate1, [3, 2], 0.012953097698324484),
 (trans1, estimate1, [3, 0, 1, 2, 1, 0, 1, 1], 3.105820218004176e-07),
 (trans1, estimate1, [0, 2, 2], 0.002205199537580688),
 (trans1, estimate1, [1, 1, 1, 3, 3, 2, 2], 3.948174936667053e-06),
 (trans1, estimate1, [3, 1, 1, 2, 1, 2, 2, 2], 5.002024954919404e-07),
 (trans1, estimate1, [0, 3, 3, 2, 3, 3, 0], 4.624302926500115e-06),
 (trans1, estimate1, [0, 1, 3, 1, 3], 0.00010393950527802421),
 (trans1, estimate1, [0, 2, 3], 0.003091926938318917),
 (trans1, estimate1, [3, 3, 1, 1, 3, 2, 2], 4.097622429781016e-06)]
viterbi_examples1=[(trans1, estimate1, [2, 0, 0, 1, 1, 3, 0, 0], [4, 2, 2, 2, 2, 3, 2, 2]),
 (trans1, estimate1, [2, 0, 2], [4, 1, 3]),
 (trans1, estimate1, [3, 0, 2, 1, 1, 0], [2, 2, 4, 1, 4, 1]),
 (trans1, estimate1, [3, 0, 3, 2, 1, 1], [2, 2, 3, 3, 3, 3]),
 (trans1, estimate1, [2, 3, 1, 2, 0, 2, 0], [4, 4, 1, 4, 1, 4, 1]),
 (trans1, estimate1, [0, 1, 1, 1, 2, 2, 2, 1], [2, 2, 2, 2, 4, 1, 4, 1]),
 (trans1, estimate1, [2, 0, 0], [4, 1, 3]),
 (trans1, estimate1, [1, 1], [2, 2]),
 (trans1, estimate1, [2, 2, 1, 1, 3, 2, 1, 0], [4, 4, 1, 3, 3, 3, 3, 3]),
 (trans1, estimate1, [3, 2, 2, 3, 3], [2, 3, 3, 3, 3])]

# 2 . Examples
trans2=[[0.0, 0.0743, 0.1352, 0.1534, 0.1456, 0.1688, 0.3227, 0.0],
 [0.0, 0.056, 0.2833, 0.2007, 0.064, 0.075, 0.2515, 0.0695],
 [0.0, 0.1071, 0.128, 0.2121, 0.1496, 0.117, 0.2009, 0.0853],
 [0.0, 0.0248, 0.2431, 0.1859, 0.2164, 0.1004, 0.1761, 0.0533],
 [0.0, 0.3176, 0.189, 0.0691, 0.1065, 0.2229, 0.0109, 0.084],
 [0.0, 0.1009, 0.0659, 0.0734, 0.0417, 0.263, 0.2514, 0.2037],
 [0.0, 0.2202, 0.0034, 0.0301, 0.3312, 0.0992, 0.1029, 0.213],
 [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]]
estimate2=[[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],
 [0.1504, 0.0983, 0.0668, 0.1586, 0.1886, 0.0796, 0.0932, 0.1644],
 [0.0462, 0.1213, 0.1256, 0.2104, 0.2302, 0.0047, 0.0559, 0.2058],
 [0.1522, 0.048, 0.1708, 0.1389, 0.0738, 0.0565, 0.2167, 0.143],
 [0.0836, 0.0424, 0.0068, 0.2924, 0.0458, 0.2093, 0.2829, 0.0368],
 [0.2812, 0.0403, 0.1687, 0.0271, 0.1419, 0.1155, 0.1147, 0.1107],
 [0.0912, 0.0656, 0.1448, 0.2317, 0.1722, 0.0102, 0.2503, 0.0342],
 [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]]
forward_examples2=[(trans2,
  estimate2,
  [7, 2, 2, 3, 1, 4, 7, 6, 4, 4, 0, 5, 6],
  3.6031424833948744e-14),
 (trans2, estimate2, [3, 7, 3, 3, 1, 4, 1, 3, 3, 1], 3.973654261085672e-11),
 (trans2,
  estimate2,
  [3, 4, 5, 5, 5, 6, 1, 7, 1, 1, 2, 4],
  2.8657568870634703e-14),
 (trans2, estimate2, [7, 5, 2, 6, 3], 1.7225445983339082e-06),
 (trans2, estimate2, [5, 5, 6, 5, 2, 2], 7.256111463165952e-08),
 (trans2, estimate2, [5, 2, 2, 5, 1, 2, 5, 3, 5], 2.833638172201552e-11),
 (trans2, estimate2, [7, 2, 6, 3, 4, 4, 7, 7, 6], 7.789495504638606e-10),
 (trans2, estimate2, [7, 3, 2, 5, 3, 4], 2.2411037430248192e-07),
 (trans2, estimate2, [2, 4, 3, 3, 1, 3, 2, 0], 5.4817868801664206e-09),
 (trans2,
  estimate2,
  [3, 4, 5, 2, 1, 0, 4, 4, 7, 7, 2],
  1.9838968633846837e-12)]
viterbi_examples2=[(trans2,
  estimate2,
  [0, 4, 7, 6, 0, 6, 0, 7, 0, 1, 7, 3, 5, 3],
  [6, 1, 2, 4, 5, 6, 1, 2, 3, 2, 3, 4, 5, 6]),
 (trans2, estimate2, [6, 7, 6], [6, 1, 6]),
 (trans2, estimate2, [0, 0], [5, 5]),
 (trans2,
  estimate2,
  [0, 0, 7, 6, 0, 1, 6, 1, 2],
  [5, 5, 5, 5, 5, 6, 4, 1, 6]),
 (trans2,
  estimate2,
  [1, 6, 3, 0, 2, 7, 6, 0, 4, 3, 6, 4, 5, 0],
  [2, 6, 4, 1, 3, 2, 4, 5, 6, 4, 1, 6, 4, 5]),
 (trans2,
  estimate2,
  [2, 6, 6, 6, 4, 2, 6, 0, 6, 7, 5, 7, 3, 4],
  [6, 1, 6, 4, 1, 6, 4, 1, 3, 2, 4, 1, 2, 6]),
 (trans2, estimate2, [5, 1, 4, 0, 1, 5, 5], [4, 1, 2, 5, 6, 4, 5]),
 (trans2,
  estimate2,
  [7, 7, 4, 3, 3, 0, 2, 0, 6, 7, 4, 5, 3, 0],
  [2, 3, 2, 6, 4, 5, 5, 5, 6, 1, 6, 4, 4, 5]),
 (trans2, estimate2, [4, 3, 3, 5, 2, 1, 4, 6], [6, 1, 6, 4, 5, 6, 1, 6]),
 (trans2, estimate2, [1, 3, 0, 7], [6, 4, 5, 5])]